// <auto-generated />
using System;
using BitBalance.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BitBalance.Infrastructure.Migrations
{
    [DbContext(typeof(BitBalanceDbContext))]
    [Migration("20250710073935_UpdateSnapshot")]
    partial class UpdateSnapshot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BitBalance.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoinSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.PriceSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoinSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CoinSymbol")
                        .IsUnique();

                    b.ToTable("PriceSnapshots");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultCurrency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NotificationEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NotificationMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelegramHandle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Asset", b =>
                {
                    b.HasOne("BitBalance.Domain.Entities.Portfolio", null)
                        .WithMany("Assets")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BitBalance.Domain.ValueObjects.Money", "PurchasePrice", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PriceAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("PriceCurrency");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.OwnsOne("BitBalance.Domain.ValueObjects.Money", "Quantity", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("QuantityAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("QuantityCurrency");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.Navigation("PurchasePrice")
                        .IsRequired();

                    b.Navigation("Quantity")
                        .IsRequired();
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Portfolio", b =>
                {
                    b.OwnsMany("BitBalance.Domain.Entities.Alert", "Alerts", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsTriggered")
                                .HasColumnType("bit");

                            b1.Property<Guid>("PortfolioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("PortfolioId");

                            b1.ToTable("PortfolioAlerts", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PortfolioId");

                            b1.OwnsOne("BitBalance.Domain.ValueObjects.Money", "TargetPrice", b2 =>
                                {
                                    b2.Property<Guid>("AlertId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Amount")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("TargetAmount");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)")
                                        .HasColumnName("TargetCurrency");

                                    b2.HasKey("AlertId");

                                    b2.ToTable("PortfolioAlerts");

                                    b2.WithOwner()
                                        .HasForeignKey("AlertId");
                                });

                            b1.OwnsOne("BitBalance.Domain.ValueObjects.CoinSymbol", "CoinSymbol", b2 =>
                                {
                                    b2.Property<Guid>("AlertId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Symbol")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)")
                                        .HasColumnName("CoinSymbol");

                                    b2.HasKey("AlertId");

                                    b2.ToTable("PortfolioAlerts");

                                    b2.WithOwner()
                                        .HasForeignKey("AlertId");
                                });

                            b1.Navigation("CoinSymbol")
                                .IsRequired();

                            b1.Navigation("TargetPrice")
                                .IsRequired();
                        });

                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.PriceSnapshot", b =>
                {
                    b.OwnsOne("BitBalance.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("PriceSnapshotId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)")
                                .HasColumnName("PriceAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("PriceCurrency");

                            b1.HasKey("PriceSnapshotId");

                            b1.ToTable("PriceSnapshots");

                            b1.WithOwner()
                                .HasForeignKey("PriceSnapshotId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Portfolio", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
