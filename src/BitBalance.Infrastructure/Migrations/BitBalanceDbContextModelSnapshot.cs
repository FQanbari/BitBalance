// <auto-generated />
using System;
using BitBalance.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BitBalance.Infrastructure.Migrations
{
    [DbContext(typeof(BitBalanceDbContext))]
    partial class BitBalanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BitBalance.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("PortfolioId1");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Asset", b =>
                {
                    b.HasOne("BitBalance.Domain.Entities.Portfolio", null)
                        .WithMany("Assets")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("BitBalance.Domain.Entities.Portfolio", null)
                        .WithMany()
                        .HasForeignKey("PortfolioId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("BitBalance.Domain.ValueObjects.Money", "PurchasePrice", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PriceAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("PriceCurrency");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.OwnsOne("BitBalance.Domain.ValueObjects.Money", "Quantity", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("QuantityAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("QuantityCurrency");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.Navigation("PurchasePrice")
                        .IsRequired();

                    b.Navigation("Quantity")
                        .IsRequired();
                });

            modelBuilder.Entity("BitBalance.Domain.Entities.Portfolio", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
